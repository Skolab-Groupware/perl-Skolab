Goal: skolab_bootstrap debian specificic stuff

Author: Noèl Köthe <noel@debian.org>

Upstream status: Parts can be or have been included

--- a/sbin/skolab_bootstrap.in
+++ b/sbin/skolab_bootstrap.in
@@ -261,7 +261,7 @@
 
 print ("Excellent all required Ports are available!\n");
 
-system("$Skolab::config{'sbindir'}/slapcat >/dev/null 2>&1");
+system("su  --shell /bin/sh --command $Skolab::config{'sbindir'}/slapcat >/dev/null 2>&1");
 if ($?==0) {
   print ("\nFound existing configuration\n");
   print "\nBootstrapping Skolab will overwrite old configuration\n";
@@ -376,6 +376,18 @@
 
 $Skolab::config{"is_master"} = $is_master;
 
+# enable saslauthd by default
+copy("/etc/default/saslauthd", "/etc/default/saslauthd.orig") || die "could not read /etc/default/saslauthd.orig";
+my $saslauthd_orig = IO::File->new("/etc/default/saslauthd.orig", "r") || die "could not read /etc/default/saslauthd.orig";
+my $saslauthd = IO::File->new("/etc/default/saslauthd", "w") || die "could not read /etc/default/saslauthd";
+foreach (<$saslauthd_orig>) {
+  s/^(# )?START=.*$/START=yes/g;
+  s/^MECHANISMS="pam"/MECHANISMS="ldap"/g;
+      print $saslauthd $_;
+}
+undef $saslauthd;
+undef $saslauthd_orig;
+
 if ( $is_master eq "true" ) {
   ##### Master server setup
   getopt('f');
@@ -465,6 +477,9 @@
     }
   };
 
+  if (! -e "/etc/postfix/sasl/") {
+    mkdir( "/etc/postfix/sasl/", 0750) || die "cannot mkdir : $!";
+  }
   my $confname = "$Skolab::config{'sasl_smtpconffile'}";
   copy("@CONFIG_DIR@/templates/smtpd.conf.template", $confname) || die "could not write to $confname";
 
@@ -506,13 +521,16 @@
         );
       $Skolab::config{"bootstrap_config"} = 'false';
 
+      #ldap server should access to certificate key
+      system("adduser --quiet $Skolab::config{'ldapserver_rusr'} $Skolab::config{'pki_grp'}");
+
       # now we must startup slapd
       print "temporarily starting slapd\n";
       $ldap_uri = "ldap://127.0.0.1:389/";
       # ensure that the database has correct permissions
       @files = <$Skolab::config{'ldapserver_dir'}/*>;
       system("chown $Skolab::config{'ldapserver_rusr'}:$Skolab::config{'ldapserver_grp'} $Skolab::config{'ldapserver_dir'}/*") if (@files);
-      (system("$Skolab::config{'libexecdir'}/openldap/slapd -h ldap://127.0.0.1:389/ -f $Skolab::config{'ldapserver_confdir'}/slapd.conf -u $Skolab::config{'ldapserver_rusr'} -g $Skolab::config{'ldapserver_grp'}") == 0 ) || die( "Could not start temporary slapd: $!" );
+      (system("/usr/sbin/slapd -h ldap://127.0.0.1:389/ -f $Skolab::config{'ldapserver_confdir'}/slapd.conf -u $Skolab::config{'ldapserver_rusr'} -g $Skolab::config{'ldapserver_grp'}") == 0 ) || die( "Could not start temporary slapd: $!" );
       print ("Waiting for OpenLDAP to start\n");
       sleep 10;
 
@@ -949,6 +967,9 @@
   chmod 0600, $skolab_config;
 }
 
+#run postfix newaliases
+skolab_system("/usr/bin/newaliases");
+
 #system("@CONFIG_DIR@/skolab_sslcert.sh $fqdn");
 print "skolab is now ready to run!\n";
 print "please restart all the daemons\n";
